thread 'rustc' panicked at /rustc/ed43cbcb882e7c06870abdd9305dc1f17eb9bab9/compiler/rustc_query_system/src/query/plumbing.rs:731:9:
Found unstable fingerprints for lints_that_dont_need_to_run(0-0): {LintId { lint: Lint { name: "KEYWORD_IDENTS_2018", default_level: Allow, desc: "detects edition keywords being used as an identifier", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: Some(FutureIncompatibleInfo { reference: "issue #49716 <https://github.com/rust-lang/rust/issues/49716>", reason: EditionError(Edition2018), explain_reason: true }), is_externally_loaded: false, feature_gate: None, crate_level_only: false, eval_always: false } }, LintId { lint: Lint { name: "KEYWORD_IDENTS_2024", default_level: Allow, desc: "detects edition keywords being used as an identifier", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: Some(FutureIncompatibleInfo { reference: "<https://doc.rust-lang.org/nightly/edition-guide/rust-2024/gen-keyword.html>", reason: EditionError(Edition2024), explain_reason: true }), is_externally_loaded: false, feature_gate: None, crate_level_only: false, eval_always: false } }, LintId { lint: Lint { name: "UNUSED_IMPORT_BRACES", default_level: Allow, desc: "unnecessary braces around an imported item", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: None, is_externally_loaded: false, feature_gate: None, crate_level_only: false, eval_always: false } }, LintId { lint: Lint { name: "NON_ASCII_IDENTS", default_level: Allow, desc: "detects non-ASCII identifiers", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: None, is_externally_loaded: false, feature_gate: None, crate_level_only: true, eval_always: false } }, LintId { lint: Lint { name: "EDITION_2024_EXPR_FRAGMENT_SPECIFIER", default_level: Allow, desc: "The `expr` fragment specifier will accept more expressions in the 2024 edition. To keep the existing behavior, use the `expr_2021` fragment specifier.", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: Some(FutureIncompatibleInfo { reference: "Migration Guide <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/macro-fragment-specifiers.html>", reason: EditionSemanticsChange(Edition2024), explain_reason: true }), is_externally_loaded: false, feature_gate: None, crate_level_only: false, eval_always: false } }, LintId { lint: Lint { name: "AMBIGUOUS_NEGATIVE_LITERALS", default_level: Allow, desc: "ambiguous negative literals operations", edition_lint_opts: None, report_in_external_macro: true, future_incompatible: None, is_externally_loaded: false, feature_gate: None, crate_level_only: false, eval_always: false } }, LintId { lint: Lint { name: "VARIANT_SIZE_DIFFERENCES", default_level: Allow, desc: "detects enums with widely varying variant sizes", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: None, is_externally_loaded: false, feature_gate: None, crate_level_only: false, eval_always: false } }, LintId { lint: Lint { name: "LET_UNDERSCORE_DROP", default_level: Allow, desc: "non-binding let on a type that has a destructor", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: None, is_externally_loaded: false, feature_gate: None, crate_level_only: false, eval_always: false } }, LintId { lint: Lint { name: "UNUSED_RESULTS", default_level: Allow, desc: "unused result of an expression in a statement", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: None, is_externally_loaded: false, feature_gate: None, crate_level_only: false, eval_always: false } }, LintId { lint: Lint { name: "UNIT_BINDINGS", default_level: Allow, desc: "binding is useless because it has the unit `()` type", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: None, is_externally_loaded: false, feature_gate: None, crate_level_only: false, eval_always: false } }, LintId { lint: Lint { name: "MISSING_COPY_IMPLEMENTATIONS", default_level: Allow, desc: "detects potentially-forgotten implementations of `Copy`", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: None, is_externally_loaded: false, feature_gate: None, crate_level_only: false, eval_always: false } }, LintId { lint: Lint { name: "UNREACHABLE_PUB", default_level: Allow, desc: "`pub` items not reachable from crate root", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: None, is_externally_loaded: false, feature_gate: None, crate_level_only: false, eval_always: false } }, LintId { lint: Lint { name: "EXPLICIT_OUTLIVES_REQUIREMENTS", default_level: Allow, desc: "outlives requirements can be inferred", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: None, is_externally_loaded: false, feature_gate: None, crate_level_only: false, eval_always: false } }, LintId { lint: Lint { name: "UNSTABLE_FEATURES", default_level: Allow, desc: "enabling unstable features", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: None, is_externally_loaded: false, feature_gate: None, crate_level_only: false, eval_always: false } }, LintId { lint: Lint { name: "MULTIPLE_SUPERTRAIT_UPCASTABLE", default_level: Allow, desc: "detect when a dyn-compatible trait has multiple supertraits", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: None, is_externally_loaded: false, feature_gate: Some("multiple_supertrait_upcastable"), crate_level_only: false, eval_always: false } }, LintId { lint: Lint { name: "MISSING_DEBUG_IMPLEMENTATIONS", default_level: Allow, desc: "detects missing implementations of Debug", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: None, is_externally_loaded: false, feature_gate: None, crate_level_only: false, eval_always: false } }, LintId { lint: Lint { name: "MISSING_DOCS", default_level: Allow, desc: "detects missing documentation for public members", edition_lint_opts: None, report_in_external_macro: true, future_incompatible: None, is_externally_loaded: false, feature_gate: None, crate_level_only: false, eval_always: false } }, LintId { lint: Lint { name: "CLOSURE_RETURNING_ASYNC_BLOCK", default_level: Allow, desc: "closure that returns `async {}` could be rewritten as an async closure", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: None, is_externally_loaded: false, feature_gate: None, crate_level_only: false, eval_always: false } }, LintId { lint: Lint { name: "IMPL_TRAIT_OVERCAPTURES", default_level: Allow, desc: "`impl Trait` will capture more lifetimes than possibly intended in edition 2024", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: Some(FutureIncompatibleInfo { reference: "<https://doc.rust-lang.org/nightly/edition-guide/rust-2024/rpit-lifetime-capture.html>", reason: EditionSemanticsChange(Edition2024), explain_reason: true }), is_externally_loaded: false, feature_gate: None, crate_level_only: false, eval_always: false } }, LintId { lint: Lint { name: "IMPL_TRAIT_REDUNDANT_CAPTURES", default_level: Allow, desc: "redundant precise-capturing `use<...>` syntax on an `impl Trait`", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: None, is_externally_loaded: false, feature_gate: None, crate_level_only: false, eval_always: false } }, LintId { lint: Lint { name: "IF_LET_RESCOPE", default_level: Allow, desc: "`if let` assigns a shorter lifetime to temporary values being pattern-matched against in Edition 2024 and rewriting in `match` is an option to preserve the semantics up to Edition 2021", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: Some(FutureIncompatibleInfo { reference: "<https://doc.rust-lang.org/nightly/edition-guide/rust-2024/temporary-if-let-scope.html>", reason: EditionSemanticsChange(Edition2024), explain_reason: true }), is_externally_loaded: false, feature_gate: None, crate_level_only: false, eval_always: false } }, LintId { lint: Lint { name: "UNQUALIFIED_LOCAL_IMPORTS", default_level: Allow, desc: "`use` of a local item without leading `self::`, `super::`, or `crate::`", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: None, is_externally_loaded: false, feature_gate: Some("unqualified_local_imports"), crate_level_only: false, eval_always: false } }, LintId { lint: Lint { name: "ABSOLUTE_PATHS_NOT_STARTING_WITH_CRATE", default_level: Allow, desc: "fully qualified paths that start with a module name instead of `crate`, `self`, or an extern crate name", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: Some(FutureIncompatibleInfo { reference: "issue #53130 <https://github.com/rust-lang/rust/issues/53130>", reason: EditionError(Edition2018), explain_reason: true }), is_externally_loaded: false, feature_gate: None, crate_level_only: false, eval_always: false } }, LintId { lint: Lint { name: "DEPRECATED_IN_FUTURE", default_level: Allow, desc: "detects use of items that will be deprecated in a future version", edition_lint_opts: None, report_in_external_macro: true, future_incompatible: None, is_externally_loaded: false, feature_gate: None, crate_level_only: false, eval_always: false } }, LintId { lint: Lint { name: "DEPRECATED_SAFE_2024", default_level: Allow, desc: "detects unsafe functions being used as safe functions", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: Some(FutureIncompatibleInfo { reference: "<https://doc.rust-lang.org/nightly/edition-guide/rust-2024/newly-unsafe-functions.html>", reason: EditionError(Edition2024), explain_reason: true }), is_externally_loaded: false, feature_gate: None, crate_level_only: false, eval_always: false } }, LintId { lint: Lint { name: "ELIDED_LIFETIMES_IN_PATHS", default_level: Allow, desc: "hidden lifetime parameters in types are deprecated", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: None, is_externally_loaded: false, feature_gate: None, crate_level_only: false, eval_always: false } }, LintId { lint: Lint { name: "FFI_UNWIND_CALLS", default_level: Allow, desc: "call to foreign functions or function pointers with FFI-unwind ABI", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: None, is_externally_loaded: false, feature_gate: None, crate_level_only: false, eval_always: false } }, LintId { lint: Lint { name: "FUZZY_PROVENANCE_CASTS", default_level: Allow, desc: "a fuzzy integer to pointer cast is used", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: None, is_externally_loaded: false, feature_gate: Some("strict_provenance_lints"), crate_level_only: false, eval_always: false } }, LintId { lint: Lint { name: "LOSSY_PROVENANCE_CASTS", default_level: Allow, desc: "a lossy pointer to integer cast is used", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: None, is_externally_loaded: false, feature_gate: Some("strict_provenance_lints"), crate_level_only: false, eval_always: false } }, LintId { lint: Lint { name: "MACRO_USE_EXTERN_CRATE", default_level: Allow, desc: "the `#[macro_use]` attribute is now deprecated in favor of using macros via the module system", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: None, is_externally_loaded: false, feature_gate: None, crate_level_only: false, eval_always: false } }, LintId { lint: Lint { name: "META_VARIABLE_MISUSE", default_level: Allow, desc: "possible meta-variable misuse at macro definition", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: None, is_externally_loaded: false, feature_gate: None, crate_level_only: false, eval_always: false } }, LintId { lint: Lint { name: "MISSING_UNSAFE_ON_EXTERN", default_level: Allow, desc: "detects missing unsafe keyword on extern declarations", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: Some(FutureIncompatibleInfo { reference: "<https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-extern.html>", reason: EditionError(Edition2024), explain_reason: true }), is_externally_loaded: false, feature_gate: None, crate_level_only: false, eval_always: false } }, LintId { lint: Lint { name: "MUST_NOT_SUSPEND", default_level: Allow, desc: "use of a `#[must_not_suspend]` value across a yield point", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: None, is_externally_loaded: false, feature_gate: Some("must_not_suspend"), crate_level_only: false, eval_always: false } }, LintId { lint: Lint { name: "NON_EXHAUSTIVE_OMITTED_PATTERNS", default_level: Allow, desc: "detect when patterns of types marked `non_exhaustive` are missed", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: None, is_externally_loaded: false, feature_gate: Some("non_exhaustive_omitted_patterns_lint"), crate_level_only: false, eval_always: false } }, LintId { lint: Lint { name: "REDUNDANT_IMPORTS", default_level: Allow, desc: "imports that are redundant due to being imported already", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: None, is_externally_loaded: false, feature_gate: None, crate_level_only: false, eval_always: false } }, LintId { lint: Lint { name: "REDUNDANT_LIFETIMES", default_level: Allow, desc: "detects lifetime parameters that are redundant because they are equal to some other named lifetime", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: None, is_externally_loaded: false, feature_gate: None, crate_level_only: false, eval_always: false } }, LintId { lint: Lint { name: "RUST_2021_INCOMPATIBLE_CLOSURE_CAPTURES", default_level: Allow, desc: "detects closures affected by Rust 2021 changes", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: Some(FutureIncompatibleInfo { reference: "", reason: EditionSemanticsChange(Edition2021), explain_reason: false }), is_externally_loaded: false, feature_gate: None, crate_level_only: false, eval_always: false } }, LintId { lint: Lint { name: "RUST_2021_INCOMPATIBLE_OR_PATTERNS", default_level: Allow, desc: "detects usage of old versions of or-patterns", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: Some(FutureIncompatibleInfo { reference: "<https://doc.rust-lang.org/nightly/edition-guide/rust-2021/or-patterns-macro-rules.html>", reason: EditionError(Edition2021), explain_reason: true }), is_externally_loaded: false, feature_gate: None, crate_level_only: false, eval_always: false } }, LintId { lint: Lint { name: "RUST_2021_PREFIXES_INCOMPATIBLE_SYNTAX", default_level: Allow, desc: "identifiers that will be parsed as a prefix in Rust 2021", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: Some(FutureIncompatibleInfo { reference: "<https://doc.rust-lang.org/nightly/edition-guide/rust-2021/reserving-syntax.html>", reason: EditionError(Edition2021), explain_reason: true }), is_externally_loaded: false, feature_gate: None, crate_level_only: true, eval_always: false } }, LintId { lint: Lint { name: "RUST_2021_PRELUDE_COLLISIONS", default_level: Allow, desc: "detects the usage of trait methods which are ambiguous with traits added to the prelude in future editions", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: Some(FutureIncompatibleInfo { reference: "<https://doc.rust-lang.org/nightly/edition-guide/rust-2021/prelude.html>", reason: EditionError(Edition2021), explain_reason: true }), is_externally_loaded: false, feature_gate: None, crate_level_only: false, eval_always: false } }, LintId { lint: Lint { name: "RUST_2024_GUARDED_STRING_INCOMPATIBLE_SYNTAX", default_level: Allow, desc: "will be parsed as a guarded string in Rust 2024", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: Some(FutureIncompatibleInfo { reference: "<https://doc.rust-lang.org/nightly/edition-guide/rust-2024/reserved-syntax.html>", reason: EditionError(Edition2024), explain_reason: true }), is_externally_loaded: false, feature_gate: None, crate_level_only: true, eval_always: false } }, LintId { lint: Lint { name: "RUST_2024_INCOMPATIBLE_PAT", default_level: Allow, desc: "detects patterns whose meaning will change in Rust 2024", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: Some(FutureIncompatibleInfo { reference: "<https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>", reason: EditionSemanticsChange(Edition2024), explain_reason: true }), is_externally_loaded: false, feature_gate: None, crate_level_only: false, eval_always: false } }, LintId { lint: Lint { name: "RUST_2024_PRELUDE_COLLISIONS", default_level: Allow, desc: "detects the usage of trait methods which are ambiguous with traits added to the prelude in future editions", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: Some(FutureIncompatibleInfo { reference: "<https://doc.rust-lang.org/nightly/edition-guide/rust-2024/prelude.html>", reason: EditionError(Edition2024), explain_reason: true }), is_externally_loaded: false, feature_gate: None, crate_level_only: false, eval_always: false } }, LintId { lint: Lint { name: "SINGLE_USE_LIFETIMES", default_level: Allow, desc: "detects lifetime parameters that are only used once", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: None, is_externally_loaded: false, feature_gate: None, crate_level_only: false, eval_always: false } }, LintId { lint: Lint { name: "TAIL_EXPR_DROP_ORDER", default_level: Allow, desc: "Detect and warn on significant change in drop order in tail expression location", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: Some(FutureIncompatibleInfo { reference: "<https://doc.rust-lang.org/nightly/edition-guide/rust-2024/temporary-tail-expr-scope.html>", reason: EditionSemanticsChange(Edition2024), explain_reason: true }), is_externally_loaded: false, feature_gate: None, crate_level_only: false, eval_always: false } }, LintId { lint: Lint { name: "TRIVIAL_CASTS", default_level: Allow, desc: "detects trivial casts which could be removed", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: None, is_externally_loaded: false, feature_gate: None, crate_level_only: false, eval_always: false } }, LintId { lint: Lint { name: "TRIVIAL_NUMERIC_CASTS", default_level: Allow, desc: "detects trivial casts of numeric types which could be removed", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: None, is_externally_loaded: false, feature_gate: None, crate_level_only: false, eval_always: false } }, LintId { lint: Lint { name: "UNNAMEABLE_TYPES", default_level: Allow, desc: "effective visibility of a type is larger than the area in which it can be named", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: None, is_externally_loaded: false, feature_gate: None, crate_level_only: false, eval_always: false } }, LintId { lint: Lint { name: "UNSAFE_ATTR_OUTSIDE_UNSAFE", default_level: Allow, desc: "detects unsafe attributes outside of unsafe", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: Some(FutureIncompatibleInfo { reference: "<https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-attributes.html>", reason: EditionError(Edition2024), explain_reason: true }), is_externally_loaded: false, feature_gate: None, crate_level_only: false, eval_always: false } }, LintId { lint: Lint { name: "UNUSED_CRATE_DEPENDENCIES", default_level: Allow, desc: "crate dependencies that are never used", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: None, is_externally_loaded: false, feature_gate: None, crate_level_only: true, eval_always: false } }, LintId { lint: Lint { name: "UNUSED_EXTERN_CRATES", default_level: Allow, desc: "extern crates that are never used", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: None, is_externally_loaded: false, feature_gate: None, crate_level_only: false, eval_always: false } }, LintId { lint: Lint { name: "UNUSED_LIFETIMES", default_level: Allow, desc: "detects lifetime parameters that are never used", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: None, is_externally_loaded: false, feature_gate: None, crate_level_only: false, eval_always: false } }, LintId { lint: Lint { name: "UNUSED_MACRO_RULES", default_level: Allow, desc: "detects macro rules that were not used", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: None, is_externally_loaded: false, feature_gate: None, crate_level_only: false, eval_always: false } }, LintId { lint: Lint { name: "UNUSED_QUALIFICATIONS", default_level: Allow, desc: "detects unnecessarily qualified names", edition_lint_opts: None, report_in_external_macro: false, future_incompatible: None, is_externally_loaded: false, feature_gate: None, crate_level_only: false, eval_always: false } }}
stack backtrace:
   0:     0x72a96900a3a5 - std::backtrace::Backtrace::create::hfe045bf2a26bc4bd
   1:     0x72a9674e1385 - std::backtrace::Backtrace::force_capture::h847324c9cb73c58a
   2:     0x72a966655ed0 - std[608c7c9f39539b92]::panicking::update_hook::<alloc[34677476c6fb56e]::boxed::Box<rustc_driver_impl[43ebde4431f74568]::install_ice_hook::{closure#1}>>::{closure#0}
   3:     0x72a9674f9cc3 - std::panicking::rust_panic_with_hook::hfdb2080f9dec4b60
   4:     0x72a9674f99ba - std::panicking::begin_panic_handler::{{closure}}::hfe5ae7b25a014d1e
   5:     0x72a9674f7379 - std::sys::backtrace::__rust_end_short_backtrace::h60573c90961cb16a
   6:     0x72a9674f967d - rust_begin_unwind
   7:     0x72a9641a7270 - core::panicking::panic_fmt::h56385638854f3beb
   8:     0x72a966bfcc44 - rustc_query_system[8c3cad9c73e72e93]::query::plumbing::incremental_verify_ich_failed::<rustc_middle[4991f9c27293da6d]::ty::context::TyCtxt>
   9:     0x72a968a3d91c - rustc_query_system[8c3cad9c73e72e93]::query::plumbing::incremental_verify_ich::<rustc_middle[4991f9c27293da6d]::ty::context::TyCtxt, rustc_middle[4991f9c27293da6d]::query::erase::Erased<[u8; 8usize]>>
  10:     0x72a968bdf604 - rustc_query_system[8c3cad9c73e72e93]::query::plumbing::try_execute_query::<rustc_query_impl[5b3a81ca9e067ca7]::DynamicConfig<rustc_query_system[8c3cad9c73e72e93]::query::caches::SingleCache<rustc_middle[4991f9c27293da6d]::query::erase::Erased<[u8; 8usize]>>, false, false, false>, rustc_query_impl[5b3a81ca9e067ca7]::plumbing::QueryCtxt, true>
  11:     0x72a968e8b989 - rustc_query_impl[5b3a81ca9e067ca7]::query_impl::lints_that_dont_need_to_run::get_query_incr::__rust_end_short_backtrace
  12:     0x72a9682df91e - <rustc_hir_analysis[d28ba78cbb7fa6bb]::check::region::ScopeResolutionVisitor as rustc_hir[50accab203fb2e2f]::intravisit::Visitor>::visit_block
  13:     0x72a9682e0b29 - rustc_hir_analysis[d28ba78cbb7fa6bb]::check::region::resolve_expr
  14:     0x72a9682e49dc - <rustc_hir_analysis[d28ba78cbb7fa6bb]::check::region::ScopeResolutionVisitor as rustc_hir[50accab203fb2e2f]::intravisit::Visitor>::visit_body
  15:     0x72a9682e423e - rustc_query_impl[5b3a81ca9e067ca7]::plumbing::__rust_begin_short_backtrace::<rustc_query_impl[5b3a81ca9e067ca7]::query_impl::region_scope_tree::dynamic_query::{closure#2}::{closure#0}, rustc_middle[4991f9c27293da6d]::query::erase::Erased<[u8; 8usize]>>
  16:     0x72a9680053ba - rustc_query_system[8c3cad9c73e72e93]::query::plumbing::try_execute_query::<rustc_query_impl[5b3a81ca9e067ca7]::DynamicConfig<rustc_query_system[8c3cad9c73e72e93]::query::caches::DefIdCache<rustc_middle[4991f9c27293da6d]::query::erase::Erased<[u8; 8usize]>>, false, false, false>, rustc_query_impl[5b3a81ca9e067ca7]::plumbing::QueryCtxt, true>
  17:     0x72a968002922 - rustc_query_impl[5b3a81ca9e067ca7]::query_impl::region_scope_tree::get_query_incr::__rust_end_short_backtrace
  18:     0x72a968615113 - rustc_mir_build[da8a20051b7cc3a2]::thir::cx::thir_body
  19:     0x72a968614c52 - rustc_query_impl[5b3a81ca9e067ca7]::plumbing::__rust_begin_short_backtrace::<rustc_query_impl[5b3a81ca9e067ca7]::query_impl::thir_body::dynamic_query::{closure#2}::{closure#0}, rustc_middle[4991f9c27293da6d]::query::erase::Erased<[u8; 16usize]>>
  20:     0x72a968eb4789 - <rustc_query_impl[5b3a81ca9e067ca7]::query_impl::thir_body::dynamic_query::{closure#2} as core[e1c08593ef5d9f61]::ops::function::FnOnce<(rustc_middle[4991f9c27293da6d]::ty::context::TyCtxt, rustc_span[4122e953b394158e]::def_id::LocalDefId)>>::call_once
  21:     0x72a968095e75 - rustc_query_system[8c3cad9c73e72e93]::query::plumbing::try_execute_query::<rustc_query_impl[5b3a81ca9e067ca7]::DynamicConfig<rustc_data_structures[211f2dba6c42b019]::vec_cache::VecCache<rustc_span[4122e953b394158e]::def_id::LocalDefId, rustc_middle[4991f9c27293da6d]::query::erase::Erased<[u8; 16usize]>, rustc_query_system[8c3cad9c73e72e93]::dep_graph::graph::DepNodeIndex>, false, false, false>, rustc_query_impl[5b3a81ca9e067ca7]::plumbing::QueryCtxt, true>
  22:     0x72a968095159 - rustc_query_impl[5b3a81ca9e067ca7]::query_impl::thir_body::get_query_incr::__rust_end_short_backtrace
  23:     0x72a96861a9f1 - rustc_mir_build[da8a20051b7cc3a2]::builder::build_mir
  24:     0x72a967c093ba - rustc_mir_transform[367e96eb1bab06ff]::mir_built
  25:     0x72a967c09365 - rustc_query_impl[5b3a81ca9e067ca7]::plumbing::__rust_begin_short_backtrace::<rustc_query_impl[5b3a81ca9e067ca7]::query_impl::mir_built::dynamic_query::{closure#2}::{closure#0}, rustc_middle[4991f9c27293da6d]::query::erase::Erased<[u8; 8usize]>>
  26:     0x72a967fe4bca - rustc_query_system[8c3cad9c73e72e93]::query::plumbing::try_execute_query::<rustc_query_impl[5b3a81ca9e067ca7]::DynamicConfig<rustc_data_structures[211f2dba6c42b019]::vec_cache::VecCache<rustc_span[4122e953b394158e]::def_id::LocalDefId, rustc_middle[4991f9c27293da6d]::query::erase::Erased<[u8; 8usize]>, rustc_query_system[8c3cad9c73e72e93]::dep_graph::graph::DepNodeIndex>, false, false, false>, rustc_query_impl[5b3a81ca9e067ca7]::plumbing::QueryCtxt, true>
  27:     0x72a968000765 - rustc_query_impl[5b3a81ca9e067ca7]::query_impl::mir_built::get_query_incr::__rust_end_short_backtrace
  28:     0x72a9652f41fd - rustc_mir_transform[367e96eb1bab06ff]::mir_promoted
  29:     0x72a968096ada - rustc_query_impl[5b3a81ca9e067ca7]::plumbing::__rust_begin_short_backtrace::<rustc_query_impl[5b3a81ca9e067ca7]::query_impl::mir_promoted::dynamic_query::{closure#2}::{closure#0}, rustc_middle[4991f9c27293da6d]::query::erase::Erased<[u8; 16usize]>>
  30:     0x72a96809688f - <rustc_query_impl[5b3a81ca9e067ca7]::query_impl::mir_promoted::dynamic_query::{closure#2} as core[e1c08593ef5d9f61]::ops::function::FnOnce<(rustc_middle[4991f9c27293da6d]::ty::context::TyCtxt, rustc_span[4122e953b394158e]::def_id::LocalDefId)>>::call_once
  31:     0x72a968095e75 - rustc_query_system[8c3cad9c73e72e93]::query::plumbing::try_execute_query::<rustc_query_impl[5b3a81ca9e067ca7]::DynamicConfig<rustc_data_structures[211f2dba6c42b019]::vec_cache::VecCache<rustc_span[4122e953b394158e]::def_id::LocalDefId, rustc_middle[4991f9c27293da6d]::query::erase::Erased<[u8; 16usize]>, rustc_query_system[8c3cad9c73e72e93]::dep_graph::graph::DepNodeIndex>, false, false, false>, rustc_query_impl[5b3a81ca9e067ca7]::plumbing::QueryCtxt, true>
  32:     0x72a96809506b - rustc_query_impl[5b3a81ca9e067ca7]::query_impl::mir_promoted::get_query_incr::__rust_end_short_backtrace
  33:     0x72a968cd81ef - rustc_query_impl[5b3a81ca9e067ca7]::plumbing::__rust_begin_short_backtrace::<rustc_query_impl[5b3a81ca9e067ca7]::query_impl::mir_borrowck::dynamic_query::{closure#2}::{closure#0}, rustc_middle[4991f9c27293da6d]::query::erase::Erased<[u8; 8usize]>>
  34:     0x72a967fe4bca - rustc_query_system[8c3cad9c73e72e93]::query::plumbing::try_execute_query::<rustc_query_impl[5b3a81ca9e067ca7]::DynamicConfig<rustc_data_structures[211f2dba6c42b019]::vec_cache::VecCache<rustc_span[4122e953b394158e]::def_id::LocalDefId, rustc_middle[4991f9c27293da6d]::query::erase::Erased<[u8; 8usize]>, rustc_query_system[8c3cad9c73e72e93]::dep_graph::graph::DepNodeIndex>, false, false, false>, rustc_query_impl[5b3a81ca9e067ca7]::plumbing::QueryCtxt, true>
  35:     0x72a968000d3f - rustc_query_impl[5b3a81ca9e067ca7]::query_impl::mir_borrowck::get_query_incr::__rust_end_short_backtrace
  36:     0x72a9686794ef - rustc_mir_transform[367e96eb1bab06ff]::promoted_mir
  37:     0x72a968679165 - rustc_query_impl[5b3a81ca9e067ca7]::plumbing::__rust_begin_short_backtrace::<rustc_query_impl[5b3a81ca9e067ca7]::query_impl::promoted_mir::dynamic_query::{closure#2}::{closure#0}, rustc_middle[4991f9c27293da6d]::query::erase::Erased<[u8; 8usize]>>
  38:     0x72a968005af6 - rustc_query_system[8c3cad9c73e72e93]::query::plumbing::try_execute_query::<rustc_query_impl[5b3a81ca9e067ca7]::DynamicConfig<rustc_query_system[8c3cad9c73e72e93]::query::caches::DefIdCache<rustc_middle[4991f9c27293da6d]::query::erase::Erased<[u8; 8usize]>>, false, false, false>, rustc_query_impl[5b3a81ca9e067ca7]::plumbing::QueryCtxt, true>
  39:     0x72a968003822 - rustc_query_impl[5b3a81ca9e067ca7]::query_impl::promoted_mir::get_query_incr::__rust_end_short_backtrace
  40:     0x72a966be12cc - rustc_metadata[b32b11f8a115de0]::rmeta::encoder::prefetch_mir::{closure#0}
  41:     0x72a966bb2ec6 - rayon[5fcf7c0ad129b003]::iter::plumbing::bridge_producer_consumer::helper::<rayon[5fcf7c0ad129b003]::slice::IterProducer<indexmap[70c35eed5e9e4fb4]::Bucket<rustc_span[4122e953b394158e]::def_id::LocalDefId, ()>>, rayon[5fcf7c0ad129b003]::iter::map::MapConsumer<rayon[5fcf7c0ad129b003]::iter::for_each::ForEachConsumer<rustc_data_structures[211f2dba6c42b019]::sync::parallel::par_for_each_in<&rustc_span[4122e953b394158e]::def_id::LocalDefId, &indexmap[70c35eed5e9e4fb4]::set::IndexSet<rustc_span[4122e953b394158e]::def_id::LocalDefId, core[e1c08593ef5d9f61]::hash::BuildHasherDefault<rustc_hash[2fcf4d65ed79ffd1]::FxHasher>>, rustc_metadata[b32b11f8a115de0]::rmeta::encoder::prefetch_mir::{closure#0}>::{closure#0}::{closure#0}>, <indexmap[70c35eed5e9e4fb4]::Bucket<rustc_span[4122e953b394158e]::def_id::LocalDefId, ()>>::key_ref>>
  42:     0x72a966bb70b4 - rayon_core[adbc0829e452370b]::join::join_context::<rayon[5fcf7c0ad129b003]::iter::plumbing::bridge_producer_consumer::helper<rayon[5fcf7c0ad129b003]::slice::IterProducer<indexmap[70c35eed5e9e4fb4]::Bucket<rustc_span[4122e953b394158e]::def_id::LocalDefId, ()>>, rayon[5fcf7c0ad129b003]::iter::map::MapConsumer<rayon[5fcf7c0ad129b003]::iter::for_each::ForEachConsumer<rustc_data_structures[211f2dba6c42b019]::sync::parallel::par_for_each_in<&rustc_span[4122e953b394158e]::def_id::LocalDefId, &indexmap[70c35eed5e9e4fb4]::set::IndexSet<rustc_span[4122e953b394158e]::def_id::LocalDefId, core[e1c08593ef5d9f61]::hash::BuildHasherDefault<rustc_hash[2fcf4d65ed79ffd1]::FxHasher>>, rustc_metadata[b32b11f8a115de0]::rmeta::encoder::prefetch_mir::{closure#0}>::{closure#0}::{closure#0}>, <indexmap[70c35eed5e9e4fb4]::Bucket<rustc_span[4122e953b394158e]::def_id::LocalDefId, ()>>::key_ref>>::{closure#0}, rayon[5fcf7c0ad129b003]::iter::plumbing::bridge_producer_consumer::helper<rayon[5fcf7c0ad129b003]::slice::IterProducer<indexmap[70c35eed5e9e4fb4]::Bucket<rustc_span[4122e953b394158e]::def_id::LocalDefId, ()>>, rayon[5fcf7c0ad129b003]::iter::map::MapConsumer<rayon[5fcf7c0ad129b003]::iter::for_each::ForEachConsumer<rustc_data_structures[211f2dba6c42b019]::sync::parallel::par_for_each_in<&rustc_span[4122e953b394158e]::def_id::LocalDefId, &indexmap[70c35eed5e9e4fb4]::set::IndexSet<rustc_span[4122e953b394158e]::def_id::LocalDefId, core[e1c08593ef5d9f61]::hash::BuildHasherDefault<rustc_hash[2fcf4d65ed79ffd1]::FxHasher>>, rustc_metadata[b32b11f8a115de0]::rmeta::encoder::prefetch_mir::{closure#0}>::{closure#0}::{closure#0}>, <indexmap[70c35eed5e9e4fb4]::Bucket<rustc_span[4122e953b394158e]::def_id::LocalDefId, ()>>::key_ref>>::{closure#1}, (), ()>::{closure#0}
  43:     0x72a966bb300f - rayon[5fcf7c0ad129b003]::iter::plumbing::bridge_producer_consumer::helper::<rayon[5fcf7c0ad129b003]::slice::IterProducer<indexmap[70c35eed5e9e4fb4]::Bucket<rustc_span[4122e953b394158e]::def_id::LocalDefId, ()>>, rayon[5fcf7c0ad129b003]::iter::map::MapConsumer<rayon[5fcf7c0ad129b003]::iter::for_each::ForEachConsumer<rustc_data_structures[211f2dba6c42b019]::sync::parallel::par_for_each_in<&rustc_span[4122e953b394158e]::def_id::LocalDefId, &indexmap[70c35eed5e9e4fb4]::set::IndexSet<rustc_span[4122e953b394158e]::def_id::LocalDefId, core[e1c08593ef5d9f61]::hash::BuildHasherDefault<rustc_hash[2fcf4d65ed79ffd1]::FxHasher>>, rustc_metadata[b32b11f8a115de0]::rmeta::encoder::prefetch_mir::{closure#0}>::{closure#0}::{closure#0}>, <indexmap[70c35eed5e9e4fb4]::Bucket<rustc_span[4122e953b394158e]::def_id::LocalDefId, ()>>::key_ref>>
  44:     0x72a966bb70b4 - rayon_core[adbc0829e452370b]::join::join_context::<rayon[5fcf7c0ad129b003]::iter::plumbing::bridge_producer_consumer::helper<rayon[5fcf7c0ad129b003]::slice::IterProducer<indexmap[70c35eed5e9e4fb4]::Bucket<rustc_span[4122e953b394158e]::def_id::LocalDefId, ()>>, rayon[5fcf7c0ad129b003]::iter::map::MapConsumer<rayon[5fcf7c0ad129b003]::iter::for_each::ForEachConsumer<rustc_data_structures[211f2dba6c42b019]::sync::parallel::par_for_each_in<&rustc_span[4122e953b394158e]::def_id::LocalDefId, &indexmap[70c35eed5e9e4fb4]::set::IndexSet<rustc_span[4122e953b394158e]::def_id::LocalDefId, core[e1c08593ef5d9f61]::hash::BuildHasherDefault<rustc_hash[2fcf4d65ed79ffd1]::FxHasher>>, rustc_metadata[b32b11f8a115de0]::rmeta::encoder::prefetch_mir::{closure#0}>::{closure#0}::{closure#0}>, <indexmap[70c35eed5e9e4fb4]::Bucket<rustc_span[4122e953b394158e]::def_id::LocalDefId, ()>>::key_ref>>::{closure#0}, rayon[5fcf7c0ad129b003]::iter::plumbing::bridge_producer_consumer::helper<rayon[5fcf7c0ad129b003]::slice::IterProducer<indexmap[70c35eed5e9e4fb4]::Bucket<rustc_span[4122e953b394158e]::def_id::LocalDefId, ()>>, rayon[5fcf7c0ad129b003]::iter::map::MapConsumer<rayon[5fcf7c0ad129b003]::iter::for_each::ForEachConsumer<rustc_data_structures[211f2dba6c42b019]::sync::parallel::par_for_each_in<&rustc_span[4122e953b394158e]::def_id::LocalDefId, &indexmap[70c35eed5e9e4fb4]::set::IndexSet<rustc_span[4122e953b394158e]::def_id::LocalDefId, core[e1c08593ef5d9f61]::hash::BuildHasherDefault<rustc_hash[2fcf4d65ed79ffd1]::FxHasher>>, rustc_metadata[b32b11f8a115de0]::rmeta::encoder::prefetch_mir::{closure#0}>::{closure#0}::{closure#0}>, <indexmap[70c35eed5e9e4fb4]::Bucket<rustc_span[4122e953b394158e]::def_id::LocalDefId, ()>>::key_ref>>::{closure#1}, (), ()>::{closure#0}
  45:     0x72a966bb300f - rayon[5fcf7c0ad129b003]::iter::plumbing::bridge_producer_consumer::helper::<rayon[5fcf7c0ad129b003]::slice::IterProducer<indexmap[70c35eed5e9e4fb4]::Bucket<rustc_span[4122e953b394158e]::def_id::LocalDefId, ()>>, rayon[5fcf7c0ad129b003]::iter::map::MapConsumer<rayon[5fcf7c0ad129b003]::iter::for_each::ForEachConsumer<rustc_data_structures[211f2dba6c42b019]::sync::parallel::par_for_each_in<&rustc_span[4122e953b394158e]::def_id::LocalDefId, &indexmap[70c35eed5e9e4fb4]::set::IndexSet<rustc_span[4122e953b394158e]::def_id::LocalDefId, core[e1c08593ef5d9f61]::hash::BuildHasherDefault<rustc_hash[2fcf4d65ed79ffd1]::FxHasher>>, rustc_metadata[b32b11f8a115de0]::rmeta::encoder::prefetch_mir::{closure#0}>::{closure#0}::{closure#0}>, <indexmap[70c35eed5e9e4fb4]::Bucket<rustc_span[4122e953b394158e]::def_id::LocalDefId, ()>>::key_ref>>
  46:     0x72a966bd36db - <rayon_core[adbc0829e452370b]::job::StackJob<rayon_core[adbc0829e452370b]::latch::SpinLatch, rayon_core[adbc0829e452370b]::join::join_context::call_b<(), rayon[5fcf7c0ad129b003]::iter::plumbing::bridge_producer_consumer::helper<rayon[5fcf7c0ad129b003]::slice::IterProducer<indexmap[70c35eed5e9e4fb4]::Bucket<rustc_span[4122e953b394158e]::def_id::LocalDefId, ()>>, rayon[5fcf7c0ad129b003]::iter::map::MapConsumer<rayon[5fcf7c0ad129b003]::iter::for_each::ForEachConsumer<rustc_data_structures[211f2dba6c42b019]::sync::parallel::par_for_each_in<&rustc_span[4122e953b394158e]::def_id::LocalDefId, &indexmap[70c35eed5e9e4fb4]::set::IndexSet<rustc_span[4122e953b394158e]::def_id::LocalDefId, core[e1c08593ef5d9f61]::hash::BuildHasherDefault<rustc_hash[2fcf4d65ed79ffd1]::FxHasher>>, rustc_metadata[b32b11f8a115de0]::rmeta::encoder::prefetch_mir::{closure#0}>::{closure#0}::{closure#0}>, <indexmap[70c35eed5e9e4fb4]::Bucket<rustc_span[4122e953b394158e]::def_id::LocalDefId, ()>>::key_ref>>::{closure#1}>::{closure#0}, ()> as rayon_core[adbc0829e452370b]::job::Job>::execute
  47:     0x72a966184da9 - <rayon_core[adbc0829e452370b]::registry::WorkerThread>::wait_until_cold
  48:     0x72a966bb7106 - rayon_core[adbc0829e452370b]::join::join_context::<rayon[5fcf7c0ad129b003]::iter::plumbing::bridge_producer_consumer::helper<rayon[5fcf7c0ad129b003]::slice::IterProducer<indexmap[70c35eed5e9e4fb4]::Bucket<rustc_span[4122e953b394158e]::def_id::LocalDefId, ()>>, rayon[5fcf7c0ad129b003]::iter::map::MapConsumer<rayon[5fcf7c0ad129b003]::iter::for_each::ForEachConsumer<rustc_data_structures[211f2dba6c42b019]::sync::parallel::par_for_each_in<&rustc_span[4122e953b394158e]::def_id::LocalDefId, &indexmap[70c35eed5e9e4fb4]::set::IndexSet<rustc_span[4122e953b394158e]::def_id::LocalDefId, core[e1c08593ef5d9f61]::hash::BuildHasherDefault<rustc_hash[2fcf4d65ed79ffd1]::FxHasher>>, rustc_metadata[b32b11f8a115de0]::rmeta::encoder::prefetch_mir::{closure#0}>::{closure#0}::{closure#0}>, <indexmap[70c35eed5e9e4fb4]::Bucket<rustc_span[4122e953b394158e]::def_id::LocalDefId, ()>>::key_ref>>::{closure#0}, rayon[5fcf7c0ad129b003]::iter::plumbing::bridge_producer_consumer::helper<rayon[5fcf7c0ad129b003]::slice::IterProducer<indexmap[70c35eed5e9e4fb4]::Bucket<rustc_span[4122e953b394158e]::def_id::LocalDefId, ()>>, rayon[5fcf7c0ad129b003]::iter::map::MapConsumer<rayon[5fcf7c0ad129b003]::iter::for_each::ForEachConsumer<rustc_data_structures[211f2dba6c42b019]::sync::parallel::par_for_each_in<&rustc_span[4122e953b394158e]::def_id::LocalDefId, &indexmap[70c35eed5e9e4fb4]::set::IndexSet<rustc_span[4122e953b394158e]::def_id::LocalDefId, core[e1c08593ef5d9f61]::hash::BuildHasherDefault<rustc_hash[2fcf4d65ed79ffd1]::FxHasher>>, rustc_metadata[b32b11f8a115de0]::rmeta::encoder::prefetch_mir::{closure#0}>::{closure#0}::{closure#0}>, <indexmap[70c35eed5e9e4fb4]::Bucket<rustc_span[4122e953b394158e]::def_id::LocalDefId, ()>>::key_ref>>::{closure#1}, (), ()>::{closure#0}
  49:     0x72a966bb300f - rayon[5fcf7c0ad129b003]::iter::plumbing::bridge_producer_consumer::helper::<rayon[5fcf7c0ad129b003]::slice::IterProducer<indexmap[70c35eed5e9e4fb4]::Bucket<rustc_span[4122e953b394158e]::def_id::LocalDefId, ()>>, rayon[5fcf7c0ad129b003]::iter::map::MapConsumer<rayon[5fcf7c0ad129b003]::iter::for_each::ForEachConsumer<rustc_data_structures[211f2dba6c42b019]::sync::parallel::par_for_each_in<&rustc_span[4122e953b394158e]::def_id::LocalDefId, &indexmap[70c35eed5e9e4fb4]::set::IndexSet<rustc_span[4122e953b394158e]::def_id::LocalDefId, core[e1c08593ef5d9f61]::hash::BuildHasherDefault<rustc_hash[2fcf4d65ed79ffd1]::FxHasher>>, rustc_metadata[b32b11f8a115de0]::rmeta::encoder::prefetch_mir::{closure#0}>::{closure#0}::{closure#0}>, <indexmap[70c35eed5e9e4fb4]::Bucket<rustc_span[4122e953b394158e]::def_id::LocalDefId, ()>>::key_ref>>
  50:     0x72a966bb6fdc - rayon_core[adbc0829e452370b]::join::join_context::<rayon[5fcf7c0ad129b003]::iter::plumbing::bridge_producer_consumer::helper<rayon[5fcf7c0ad129b003]::slice::IterProducer<indexmap[70c35eed5e9e4fb4]::Bucket<rustc_span[4122e953b394158e]::def_id::LocalDefId, ()>>, rayon[5fcf7c0ad129b003]::iter::map::MapConsumer<rayon[5fcf7c0ad129b003]::iter::for_each::ForEachConsumer<rustc_data_structures[211f2dba6c42b019]::sync::parallel::par_for_each_in<&rustc_span[4122e953b394158e]::def_id::LocalDefId, &indexmap[70c35eed5e9e4fb4]::set::IndexSet<rustc_span[4122e953b394158e]::def_id::LocalDefId, core[e1c08593ef5d9f61]::hash::BuildHasherDefault<rustc_hash[2fcf4d65ed79ffd1]::FxHasher>>, rustc_metadata[b32b11f8a115de0]::rmeta::encoder::prefetch_mir::{closure#0}>::{closure#0}::{closure#0}>, <indexmap[70c35eed5e9e4fb4]::Bucket<rustc_span[4122e953b394158e]::def_id::LocalDefId, ()>>::key_ref>>::{closure#0}, rayon[5fcf7c0ad129b003]::iter::plumbing::bridge_producer_consumer::helper<rayon[5fcf7c0ad129b003]::slice::IterProducer<indexmap[70c35eed5e9e4fb4]::Bucket<rustc_span[4122e953b394158e]::def_id::LocalDefId, ()>>, rayon[5fcf7c0ad129b003]::iter::map::MapConsumer<rayon[5fcf7c0ad129b003]::iter::for_each::ForEachConsumer<rustc_data_structures[211f2dba6c42b019]::sync::parallel::par_for_each_in<&rustc_span[4122e953b394158e]::def_id::LocalDefId, &indexmap[70c35eed5e9e4fb4]::set::IndexSet<rustc_span[4122e953b394158e]::def_id::LocalDefId, core[e1c08593ef5d9f61]::hash::BuildHasherDefault<rustc_hash[2fcf4d65ed79ffd1]::FxHasher>>, rustc_metadata[b32b11f8a115de0]::rmeta::encoder::prefetch_mir::{closure#0}>::{closure#0}::{closure#0}>, <indexmap[70c35eed5e9e4fb4]::Bucket<rustc_span[4122e953b394158e]::def_id::LocalDefId, ()>>::key_ref>>::{closure#1}, (), ()>::{closure#0}
  51:     0x72a966bb300f - rayon[5fcf7c0ad129b003]::iter::plumbing::bridge_producer_consumer::helper::<rayon[5fcf7c0ad129b003]::slice::IterProducer<indexmap[70c35eed5e9e4fb4]::Bucket<rustc_span[4122e953b394158e]::def_id::LocalDefId, ()>>, rayon[5fcf7c0ad129b003]::iter::map::MapConsumer<rayon[5fcf7c0ad129b003]::iter::for_each::ForEachConsumer<rustc_data_structures[211f2dba6c42b019]::sync::parallel::par_for_each_in<&rustc_span[4122e953b394158e]::def_id::LocalDefId, &indexmap[70c35eed5e9e4fb4]::set::IndexSet<rustc_span[4122e953b394158e]::def_id::LocalDefId, core[e1c08593ef5d9f61]::hash::BuildHasherDefault<rustc_hash[2fcf4d65ed79ffd1]::FxHasher>>, rustc_metadata[b32b11f8a115de0]::rmeta::encoder::prefetch_mir::{closure#0}>::{closure#0}::{closure#0}>, <indexmap[70c35eed5e9e4fb4]::Bucket<rustc_span[4122e953b394158e]::def_id::LocalDefId, ()>>::key_ref>>
  52:     0x72a966bb6fdc - rayon_core[adbc0829e452370b]::join::join_context::<rayon[5fcf7c0ad129b003]::iter::plumbing::bridge_producer_consumer::helper<rayon[5fcf7c0ad129b003]::slice::IterProducer<indexmap[70c35eed5e9e4fb4]::Bucket<rustc_span[4122e953b394158e]::def_id::LocalDefId, ()>>, rayon[5fcf7c0ad129b003]::iter::map::MapConsumer<rayon[5fcf7c0ad129b003]::iter::for_each::ForEachConsumer<rustc_data_structures[211f2dba6c42b019]::sync::parallel::par_for_each_in<&rustc_span[4122e953b394158e]::def_id::LocalDefId, &indexmap[70c35eed5e9e4fb4]::set::IndexSet<rustc_span[4122e953b394158e]::def_id::LocalDefId, core[e1c08593ef5d9f61]::hash::BuildHasherDefault<rustc_hash[2fcf4d65ed79ffd1]::FxHasher>>, rustc_metadata[b32b11f8a115de0]::rmeta::encoder::prefetch_mir::{closure#0}>::{closure#0}::{closure#0}>, <indexmap[70c35eed5e9e4fb4]::Bucket<rustc_span[4122e953b394158e]::def_id::LocalDefId, ()>>::key_ref>>::{closure#0}, rayon[5fcf7c0ad129b003]::iter::plumbing::bridge_producer_consumer::helper<rayon[5fcf7c0ad129b003]::slice::IterProducer<indexmap[70c35eed5e9e4fb4]::Bucket<rustc_span[4122e953b394158e]::def_id::LocalDefId, ()>>, rayon[5fcf7c0ad129b003]::iter::map::MapConsumer<rayon[5fcf7c0ad129b003]::iter::for_each::ForEachConsumer<rustc_data_structures[211f2dba6c42b019]::sync::parallel::par_for_each_in<&rustc_span[4122e953b394158e]::def_id::LocalDefId, &indexmap[70c35eed5e9e4fb4]::set::IndexSet<rustc_span[4122e953b394158e]::def_id::LocalDefId, core[e1c08593ef5d9f61]::hash::BuildHasherDefault<rustc_hash[2fcf4d65ed79ffd1]::FxHasher>>, rustc_metadata[b32b11f8a115de0]::rmeta::encoder::prefetch_mir::{closure#0}>::{closure#0}::{closure#0}>, <indexmap[70c35eed5e9e4fb4]::Bucket<rustc_span[4122e953b394158e]::def_id::LocalDefId, ()>>::key_ref>>::{closure#1}, (), ()>::{closure#0}
  53:     0x72a966bb300f - rayon[5fcf7c0ad129b003]::iter::plumbing::bridge_producer_consumer::helper::<rayon[5fcf7c0ad129b003]::slice::IterProducer<indexmap[70c35eed5e9e4fb4]::Bucket<rustc_span[4122e953b394158e]::def_id::LocalDefId, ()>>, rayon[5fcf7c0ad129b003]::iter::map::MapConsumer<rayon[5fcf7c0ad129b003]::iter::for_each::ForEachConsumer<rustc_data_structures[211f2dba6c42b019]::sync::parallel::par_for_each_in<&rustc_span[4122e953b394158e]::def_id::LocalDefId, &indexmap[70c35eed5e9e4fb4]::set::IndexSet<rustc_span[4122e953b394158e]::def_id::LocalDefId, core[e1c08593ef5d9f61]::hash::BuildHasherDefault<rustc_hash[2fcf4d65ed79ffd1]::FxHasher>>, rustc_metadata[b32b11f8a115de0]::rmeta::encoder::prefetch_mir::{closure#0}>::{closure#0}::{closure#0}>, <indexmap[70c35eed5e9e4fb4]::Bucket<rustc_span[4122e953b394158e]::def_id::LocalDefId, ()>>::key_ref>>
  54:     0x72a966bb6fdc - rayon_core[adbc0829e452370b]::join::join_context::<rayon[5fcf7c0ad129b003]::iter::plumbing::bridge_producer_consumer::helper<rayon[5fcf7c0ad129b003]::slice::IterProducer<indexmap[70c35eed5e9e4fb4]::Bucket<rustc_span[4122e953b394158e]::def_id::LocalDefId, ()>>, rayon[5fcf7c0ad129b003]::iter::map::MapConsumer<rayon[5fcf7c0ad129b003]::iter::for_each::ForEachConsumer<rustc_data_structures[211f2dba6c42b019]::sync::parallel::par_for_each_in<&rustc_span[4122e953b394158e]::def_id::LocalDefId, &indexmap[70c35eed5e9e4fb4]::set::IndexSet<rustc_span[4122e953b394158e]::def_id::LocalDefId, core[e1c08593ef5d9f61]::hash::BuildHasherDefault<rustc_hash[2fcf4d65ed79ffd1]::FxHasher>>, rustc_metadata[b32b11f8a115de0]::rmeta::encoder::prefetch_mir::{closure#0}>::{closure#0}::{closure#0}>, <indexmap[70c35eed5e9e4fb4]::Bucket<rustc_span[4122e953b394158e]::def_id::LocalDefId, ()>>::key_ref>>::{closure#0}, rayon[5fcf7c0ad129b003]::iter::plumbing::bridge_producer_consumer::helper<rayon[5fcf7c0ad129b003]::slice::IterProducer<indexmap[70c35eed5e9e4fb4]::Bucket<rustc_span[4122e953b394158e]::def_id::LocalDefId, ()>>, rayon[5fcf7c0ad129b003]::iter::map::MapConsumer<rayon[5fcf7c0ad129b003]::iter::for_each::ForEachConsumer<rustc_data_structures[211f2dba6c42b019]::sync::parallel::par_for_each_in<&rustc_span[4122e953b394158e]::def_id::LocalDefId, &indexmap[70c35eed5e9e4fb4]::set::IndexSet<rustc_span[4122e953b394158e]::def_id::LocalDefId, core[e1c08593ef5d9f61]::hash::BuildHasherDefault<rustc_hash[2fcf4d65ed79ffd1]::FxHasher>>, rustc_metadata[b32b11f8a115de0]::rmeta::encoder::prefetch_mir::{closure#0}>::{closure#0}::{closure#0}>, <indexmap[70c35eed5e9e4fb4]::Bucket<rustc_span[4122e953b394158e]::def_id::LocalDefId, ()>>::key_ref>>::{closure#1}, (), ()>::{closure#0}
  55:     0x72a966bb300f - rayon[5fcf7c0ad129b003]::iter::plumbing::bridge_producer_consumer::helper::<rayon[5fcf7c0ad129b003]::slice::IterProducer<indexmap[70c35eed5e9e4fb4]::Bucket<rustc_span[4122e953b394158e]::def_id::LocalDefId, ()>>, rayon[5fcf7c0ad129b003]::iter::map::MapConsumer<rayon[5fcf7c0ad129b003]::iter::for_each::ForEachConsumer<rustc_data_structures[211f2dba6c42b019]::sync::parallel::par_for_each_in<&rustc_span[4122e953b394158e]::def_id::LocalDefId, &indexmap[70c35eed5e9e4fb4]::set::IndexSet<rustc_span[4122e953b394158e]::def_id::LocalDefId, core[e1c08593ef5d9f61]::hash::BuildHasherDefault<rustc_hash[2fcf4d65ed79ffd1]::FxHasher>>, rustc_metadata[b32b11f8a115de0]::rmeta::encoder::prefetch_mir::{closure#0}>::{closure#0}::{closure#0}>, <indexmap[70c35eed5e9e4fb4]::Bucket<rustc_span[4122e953b394158e]::def_id::LocalDefId, ()>>::key_ref>>
  56:     0x72a966be15ad - rustc_metadata[b32b11f8a115de0]::rmeta::encoder::encode_metadata::{closure#0}
  57:     0x72a966bb6aa7 - rayon_core[adbc0829e452370b]::join::join_context::<rayon_core[adbc0829e452370b]::join::join::call<core[e1c08593ef5d9f61]::option::Option<rustc_data_structures[211f2dba6c42b019]::marker::FromDyn<()>>, rustc_data_structures[211f2dba6c42b019]::sync::parallel::join<rustc_metadata[b32b11f8a115de0]::rmeta::encoder::encode_metadata::{closure#0}, rustc_metadata[b32b11f8a115de0]::rmeta::encoder::encode_metadata::{closure#1}, (), &[(rustc_middle[4991f9c27293da6d]::middle::exported_symbols::ExportedSymbol, rustc_middle[4991f9c27293da6d]::middle::exported_symbols::SymbolExportInfo)]>::{closure#0}::{closure#0}>::{closure#0}, rayon_core[adbc0829e452370b]::join::join::call<core[e1c08593ef5d9f61]::option::Option<rustc_data_structures[211f2dba6c42b019]::marker::FromDyn<&[(rustc_middle[4991f9c27293da6d]::middle::exported_symbols::ExportedSymbol, rustc_middle[4991f9c27293da6d]::middle::exported_symbols::SymbolExportInfo)]>>, rustc_data_structures[211f2dba6c42b019]::sync::parallel::join<rustc_metadata[b32b11f8a115de0]::rmeta::encoder::encode_metadata::{closure#0}, rustc_metadata[b32b11f8a115de0]::rmeta::encoder::encode_metadata::{closure#1}, (), &[(rustc_middle[4991f9c27293da6d]::middle::exported_symbols::ExportedSymbol, rustc_middle[4991f9c27293da6d]::middle::exported_symbols::SymbolExportInfo)]>::{closure#0}::{closure#1}>::{closure#0}, core[e1c08593ef5d9f61]::option::Option<rustc_data_structures[211f2dba6c42b019]::marker::FromDyn<()>>, core[e1c08593ef5d9f61]::option::Option<rustc_data_structures[211f2dba6c42b019]::marker::FromDyn<&[(rustc_middle[4991f9c27293da6d]::middle::exported_symbols::ExportedSymbol, rustc_middle[4991f9c27293da6d]::middle::exported_symbols::SymbolExportInfo)]>>>::{closure#0}
  58:     0x72a968c357a7 - rustc_metadata[b32b11f8a115de0]::rmeta::encoder::encode_metadata
  59:     0x72a968bf6a8e - rustc_metadata[b32b11f8a115de0]::fs::encode_and_write_metadata
  60:     0x72a968bf58ce - <rustc_interface[5587e049de4e95b3]::queries::Linker>::codegen_and_build_linker
  61:     0x72a968c2a41d - rustc_interface[5587e049de4e95b3]::passes::create_and_enter_global_ctxt::<core[e1c08593ef5d9f61]::option::Option<rustc_interface[5587e049de4e95b3]::queries::Linker>, rustc_driver_impl[43ebde4431f74568]::run_compiler::{closure#0}::{closure#2}>::{closure#2}::{closure#0}
  62:     0x72a968c1d650 - rustc_interface[5587e049de4e95b3]::interface::run_compiler::<(), rustc_driver_impl[43ebde4431f74568]::run_compiler::{closure#0}>::{closure#1}
  63:     0x72a96666b52f - <rayon_core[adbc0829e452370b]::job::StackJob<rayon_core[adbc0829e452370b]::latch::LatchRef<rayon_core[adbc0829e452370b]::latch::LockLatch>, <rayon_core[adbc0829e452370b]::registry::Registry>::in_worker_cold<<rayon_core[adbc0829e452370b]::thread_pool::ThreadPool>::install<rustc_interface[5587e049de4e95b3]::util::run_in_thread_pool_with_globals<rustc_interface[5587e049de4e95b3]::interface::run_compiler<(), rustc_driver_impl[43ebde4431f74568]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#3}::{closure#0}::{closure#1}::{closure#0}, ()>::{closure#0}, ()>::{closure#0}::{closure#0}, ()> as rayon_core[adbc0829e452370b]::job::Job>::execute
  64:     0x72a966184da9 - <rayon_core[adbc0829e452370b]::registry::WorkerThread>::wait_until_cold
  65:     0x72a96618268b - <rayon_core[adbc0829e452370b]::registry::ThreadBuilder>::run
  66:     0x72a96665d7ca - <<crossbeam_utils[26730d99158b3c85]::thread::ScopedThreadBuilder>::spawn<<rayon_core[adbc0829e452370b]::ThreadPoolBuilder>::build_scoped<rustc_interface[5587e049de4e95b3]::util::run_in_thread_pool_with_globals<rustc_interface[5587e049de4e95b3]::interface::run_compiler<(), rustc_driver_impl[43ebde4431f74568]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#3}::{closure#0}::{closure#0}, rustc_interface[5587e049de4e95b3]::util::run_in_thread_pool_with_globals<rustc_interface[5587e049de4e95b3]::interface::run_compiler<(), rustc_driver_impl[43ebde4431f74568]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#3}::{closure#0}::{closure#1}, ()>::{closure#0}::{closure#0}::{closure#0}, ()>::{closure#0} as core[e1c08593ef5d9f61]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}
  67:     0x72a96664c0ae - std[608c7c9f39539b92]::sys::backtrace::__rust_begin_short_backtrace::<alloc[34677476c6fb56e]::boxed::Box<dyn core[e1c08593ef5d9f61]::ops::function::FnOnce<(), Output = ()> + core[e1c08593ef5d9f61]::marker::Send>, ()>
  68:     0x72a96665d25a - <<std[608c7c9f39539b92]::thread::Builder>::spawn_unchecked_<alloc[34677476c6fb56e]::boxed::Box<dyn core[e1c08593ef5d9f61]::ops::function::FnOnce<(), Output = ()> + core[e1c08593ef5d9f61]::marker::Send>, ()>::{closure#1} as core[e1c08593ef5d9f61]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}
  69:     0x72a968a7e32b - std::sys::pal::unix::thread::Thread::new::thread_start::h5786711fbc4e07b9
  70:     0x72a962ea339d - <unknown>
  71:     0x72a962f2849c - <unknown>
  72:                0x0 - <unknown>


rustc version: 1.86.0-nightly (ed43cbcb8 2025-01-21)
platform: x86_64-unknown-linux-gnu

query stack during panic:
#0 [lints_that_dont_need_to_run] Computing all lints that are explicitly enabled or with a default level greater than Allow
#1 [region_scope_tree] computing drop scopes for `<impl at macros/src/lib.rs:206:1: 206:24>::parse::panic_cold_explicit`
#2 [thir_body] building THIR for `<impl at macros/src/lib.rs:206:1: 206:24>::parse::panic_cold_explicit`
#3 [mir_built] building MIR for `<impl at macros/src/lib.rs:206:1: 206:24>::parse::panic_cold_explicit`
#4 [mir_promoted] promoting constants in MIR for `<impl at macros/src/lib.rs:206:1: 206:24>::parse::panic_cold_explicit`
#5 [mir_borrowck] borrow-checking `<impl at macros/src/lib.rs:206:1: 206:24>::parse::panic_cold_explicit`
#6 [promoted_mir] optimizing promoted MIR for `<impl at macros/src/lib.rs:206:1: 206:24>::parse::panic_cold_explicit`
end of query stack
